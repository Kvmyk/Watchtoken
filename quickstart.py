"""
Szybki start z WatchToken - minimalistyczny przyk≈Çad.
"""

def quick_start_example():
    """5-minutowy tutorial WatchToken."""
    print("üïê WatchToken - Szybki start")
    print("=" * 30)
    
    # Import biblioteki
    from watchtoken import TokenCounter
    
    # 1. Podstawowe liczenie token√≥w
    print("\n1Ô∏è‚É£ Podstawowe liczenie token√≥w:")
    tc = TokenCounter("gpt-3.5-turbo")
    
    prompt = "Napisz kr√≥tkie streszczenie ksiƒÖ≈ºki 'Lalka' Boles≈Çawa Prusa."
    tokens = tc.count(prompt)
    print(f"   Prompt: '{prompt}'")
    print(f"   Tokeny: {tokens}")
    
    # 2. Sprawdzanie limit√≥w
    print("\n2Ô∏è‚É£ Sprawdzanie limit√≥w:")
    tc_limited = TokenCounter("gpt-3.5-turbo", limit=20)
    
    if tc_limited.is_over(prompt):
        print(f"   ‚ùå Prompt przekracza limit {tc_limited.limit} token√≥w")
        remaining = tc_limited.get_remaining_tokens("")
        print(f"   üí° Dostƒôpne tokeny: {remaining}")
    else:
        print(f"   ‚úÖ Prompt mie≈õci siƒô w limicie")
    
    # 3. Estymacja koszt√≥w
    print("\n3Ô∏è‚É£ Estymacja koszt√≥w:")
    cost = tc.estimate_cost(prompt, output_tokens=100)
    print(f"   Szacowany koszt (100 token√≥w odpowiedzi): ${cost:.6f}")
    
    # 4. Por√≥wnanie modeli
    print("\n4Ô∏è‚É£ Por√≥wnanie modeli dla tego samego zadania:")
    models = ["gpt-3.5-turbo", "gpt-4-turbo", "claude-3-sonnet"]
    
    print(f"   {'Model':<15} {'Tokeny':<8} {'Koszt':<12}")
    print("   " + "-" * 35)
    
    for model in models:
        try:
            tc_model = TokenCounter(model)
            model_tokens = tc_model.count(prompt)
            model_cost = tc_model.estimate_cost(prompt, output_tokens=100)
            print(f"   {model:<15} {model_tokens:<8} ${model_cost:<11.6f}")
        except Exception as e:
            print(f"   {model:<15} Error: {str(e)[:20]}")
    
    # 5. Callback przy przekroczeniu
    print("\n5Ô∏è‚É£ Ostrze≈ºenia przy przekroczeniu limitu:")
    
    def alert_callback(tokens, limit, model):
        print(f"   üö® UWAGA: {model} przekroczy≈Ç limit ({tokens} > {limit})")
    
    tc_callback = TokenCounter(
        "gpt-3.5-turbo", 
        limit=10, 
        on_limit_exceeded=alert_callback
    )
    
    long_prompt = "To jest bardzo d≈Çugi prompt, kt√≥ry na pewno przekroczy ustalony limit token√≥w dla tego przyk≈Çadu demonstracyjnego."
    tc_callback.check_limit(long_prompt)
    
    print("\n‚úÖ Gotowe! Teraz mo≈ºesz u≈ºywaƒá WatchToken w swoich projektach.")
    print("\nüìö Wiƒôcej przyk≈Çad√≥w:")
    print("   - python examples/basic_examples.py")
    print("   - python examples/advanced_examples.py") 
    print("   - python demo.py")


if __name__ == "__main__":
    try:
        quick_start_example()
    except ImportError:
        print("‚ùå B≈ÇƒÖd: Zainstaluj bibliotekƒô: pip install -e .")
    except Exception as e:
        print(f"‚ùå B≈ÇƒÖd: {e}")
